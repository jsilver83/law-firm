# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-01-15 10:03
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lookup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lookup_type', models.CharField(choices=[('ORGANIZATION_TYPE', 'Organization Type'), ('CASE_TYPE', 'Case Type'), ('CONSULTATION_TYPE', 'Consultation Type'), ('PAPERWORK_TYPE', 'Paperwork Type'), ('DOCUMENT_TYPE', 'Document Type'), ('COURT_ROLE', 'Court Role')], db_index=True, max_length=30, null=True)),
                ('lookup_value_ar', models.CharField(max_length=100, null=True)),
                ('lookup_value_en', models.CharField(max_length=100, null=True)),
                ('show', models.BooleanField(default=True, verbose_name='Show')),
                ('display_order', models.PositiveSmallIntegerField(null=True, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Look up',
                'verbose_name_plural': 'Look ups',
                'ordering': ['lookup_type', '-display_order'],
            },
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nationality_ar', models.CharField(max_length=100, null=True, verbose_name='Nationality (Arabic)')),
                ('nationality_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nationality (English)')),
                ('country_ar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nationality (Arabic)')),
                ('country_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nationality (Arabic)')),
                ('show', models.BooleanField(default=True, verbose_name='Show')),
                ('display_order', models.PositiveSmallIntegerField(null=True, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Nationality',
                'verbose_name_plural': 'Nationalities',
                'ordering': ['display_order', 'nationality_en'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ar', models.CharField(max_length=100, null=True, verbose_name='Organization Name')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Organization Name (English)')),
                ('type', models.CharField(max_length=100, null=True, verbose_name='Type')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, max_length=20, null=True, verbose_name='Fax')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='City')),
                ('address', models.TextField(null=True, verbose_name='Address')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ar', models.CharField(max_length=255, null=True, verbose_name='Full Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Full Name (English)')),
                ('mobile', models.CharField(max_length=20, null=True, verbose_name='Mobile')),
                ('home_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Home Phone')),
                ('work_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Work Phone')),
                ('personal_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Personal Email')),
                ('government_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Government ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1, null=True, verbose_name='Gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date Of Birth')),
                ('address', models.TextField(null=True, verbose_name='Address')),
                ('active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('personal_picture', models.FileField(blank=True, null=True, upload_to='', verbose_name='Personal Picture')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_ar', models.CharField(max_length=100, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=100, null=True, verbose_name='Title (English)')),
                ('description_ar', models.TextField(null=True, verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description (English)')),
                ('status', models.CharField(choices=[('NEW', 'New'), ('IN_PROGRESS', 'In Progress'), ('FINISHED', 'Finished'), ('DELAYED', 'Delayed'), ('CANCELLED', 'Cancelled')], default='NEW', max_length=20, null=True, verbose_name='Status')),
                ('status_comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Status Comments')),
                ('fees', models.CharField(max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ('-updated_on', 'created_on'),
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_ar', models.CharField(max_length=100, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=100, null=True, verbose_name='Title (English)')),
                ('description_ar', models.TextField(null=True, verbose_name='Description')),
                ('description_en', models.TextField(null=True, verbose_name='Description (English)')),
                ('date', models.DateTimeField(null=True, verbose_name='Reminder Date')),
                ('type', models.CharField(blank=True, choices=[('SMS', 'SMS'), ('EMAIL', 'Email'), ('BOTH', 'Both')], max_length=10, null=True, verbose_name='Type')),
                ('last_seen_on', models.DateTimeField(null=True, verbose_name='Last Seen On')),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_ar', models.CharField(max_length=100, null=True, verbose_name='Title')),
                ('summary_en', models.CharField(max_length=100, null=True, verbose_name='Title (English)')),
                ('details_ar', models.TextField(null=True, verbose_name='Description')),
                ('details_en', models.TextField(null=True, verbose_name='Description (English)')),
                ('date', models.DateTimeField(null=True, verbose_name='Update Date')),
                ('attachments', models.FileField(blank=True, null=True, upload_to='', verbose_name='Attachments')),
                ('inform_the_client', models.BooleanField(default=True, verbose_name='Inform The Client')),
                ('created_on', models.DateTimeField(null=True, verbose_name='Created On')),
            ],
            options={
                'verbose_name': 'Update',
                'verbose_name_plural': 'Updates',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('project_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.Project')),
                ('case_reference', models.CharField(max_length=100, null=True, verbose_name='Case Reference')),
                ('type', models.CharField(max_length=100, null=True, verbose_name='Type')),
                ('client_role', models.CharField(max_length=100, null=True, verbose_name='Client Role')),
                ('opponent_role', models.CharField(max_length=100, null=True, verbose_name='Opponent Role')),
                ('court_office', models.CharField(blank=True, max_length=200, null=True, verbose_name='Court Office')),
            ],
            options={
                'verbose_name': 'Case',
                'verbose_name_plural': 'Cases',
            },
            bases=('projects.project',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.Person')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
            bases=('projects.person',),
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('project_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.Project')),
                ('type', models.CharField(max_length=100, null=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
            },
            bases=('projects.project',),
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('organization_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.Organization')),
            ],
            options={
                'verbose_name': 'Court',
                'verbose_name_plural': 'Courts',
            },
            bases=('projects.organization',),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.Person')),
                ('job_description_ar', models.CharField(max_length=255, null=True, verbose_name='Job Description')),
                ('job_description_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Job Description (English)')),
                ('joining_date', models.DateTimeField(null=True, verbose_name='Joining Date')),
                ('qualifications', models.TextField(blank=True, null=True, verbose_name='Qualifications')),
                ('monthly_salary_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('SAR', 'SAR'), ('USD', 'USD $')], default='SAR', editable=False, max_length=3)),
                ('monthly_salary', djmoney.models.fields.MoneyField(blank=True, decimal_places=2, default=Decimal('0'), default_currency='SAR', max_digits=11, null=True, verbose_name='Monthly Salary')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
            bases=('projects.person',),
        ),
        migrations.CreateModel(
            name='Paperwork',
            fields=[
                ('project_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.Project')),
                ('type', models.CharField(max_length=100, null=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Paperwork',
                'verbose_name_plural': 'Paperwork Projects',
            },
            bases=('projects.project',),
        ),
        migrations.AddField(
            model_name='update',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updates', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='reminder',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reminders', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='person',
            name='nationality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.Nationality'),
        ),
        migrations.AddField(
            model_name='update',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updates', to='projects.Employee', verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='reminder',
            name='whom_to_remind',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reminders', to='projects.Employee', verbose_name='Whom To Remind'),
        ),
        migrations.AddField(
            model_name='project',
            name='client',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_project', to='projects.Client', verbose_name='Client'),
        ),
        migrations.AddField(
            model_name='project',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_project_created_projects', to='projects.Employee', verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='project',
            name='main_assignee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_projects_project', to='projects.Employee', verbose_name='Main Assignee'),
        ),
        migrations.AddField(
            model_name='project',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.Employee', verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='person',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects_created_person', to='projects.Employee', verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='person',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.Employee', verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='organization',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_organizations', to='projects.Employee', verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='organization',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.Employee', verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='client',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_persons', to='projects.Organization'),
        ),
        migrations.AddField(
            model_name='case',
            name='court',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opposing_cases', to='projects.Court', verbose_name='Court'),
        ),
        migrations.AddField(
            model_name='case',
            name='opponent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opposing_cases', to='projects.Client', verbose_name='Opponent'),
        ),
    ]
